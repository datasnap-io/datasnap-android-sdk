apply plugin: 'com.android.library'

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

group = "io.datasnap"
archivesBaseName = "datasnap-android-sdk"
version = "2.0.1"

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {

        minSdkVersion 16
        targetSdkVersion 21
        versionCode 3
        versionName "2.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // Enabling multidex support.
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    provided fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('junit:junit:4.12')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2')
    androidTestCompile('com.android.support.test:runner:0.3') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'gson'
    }
    androidTestCompile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile ('com.google.dexmaker:dexmaker:1.2')
    androidTestCompile ('com.google.dexmaker:dexmaker-mockito:1.2')
    compile 'com.google.android.gms:play-services:[6.1.0, 6.2)'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'org.slf4j:slf4j-api:1.7.2'
    compile group: 'org.apache.httpcomponents', name: 'httpclient-android', version: '4.3.5.1'
    compile('org.apache.httpcomponents:httpmime:4.3') {
        exclude module: "httpclient"
    }
}


buildscript {
    repositories {
        mavenCentral()
        //Needed only for SNAPSHOT versions
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}


signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.getenv('GRADLE_USERNAME'), password: System.getenv('GRADLE_PASSWORD'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: System.getenv('GRADLE_USERNAME'), password: System.getenv('GRADLE_PASSWORD'))
            }

            pom.project {
                name 'Datasnap Android SDK'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'SDK for sending location-based events to the Datasnap server.'
                url 'https://github.com/datasnap-io/datasnap-android-sdk'

                scm {
                    connection 'scm:git:git@github.com:datasnap-io/datasnap-android-sdk.git'
                    developerConnection 'scm:git:git@github.com:datasnap-io/datasnap-android-sdk.git'
                    url 'git@github.com:datasnap-io/datasnap-android-sdk.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'ppelegatti'
                        name 'Paolo Pelegatti'
                        email 'ppelegatti@grio.com<'
                    }
                }
            }
        }
    }
}


